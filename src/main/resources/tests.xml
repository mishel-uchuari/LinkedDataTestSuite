<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xml>
	<testCases>
		<junit>
			<name>GETSPARQLHTML200</name>
			<comment>Ir directo a formulario SPARQL</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>sparql</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceHTMLPageNoRedirect303</name>
			<comment>Recurso con pagina bonita, pero sin seguir el 303</comment>
			<method>GETN0303</method>
			<accept>text/html</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/asesor-de-la-secretaria-general-de-presidencia-aldekoa-de-la-torre-jon-andoni-lehendakaritza-lehendakaritza-2016-06-22
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getLocation()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>/page/</value>
				</test>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>303</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceHTMLDocNoRedirect303</name>
			<comment>Recurso con pagina bonita, pero sin seguir el 303</comment>
			<method>GETN0303</method>
			<accept>text/html</accept>
			<pathuri>id/medio-ambiente/calidad-del-aire/elemento/ICAEstacion-2017-01-26
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getLocation()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>/doc/es/</value>
				</test>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>303</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceHTMLPage</name>
			<comment>Recurso con pagina bonita que no existe todavia</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/asesor-de-la-secretaria-general-de-presidencia-aldekoa-de-la-torre-jon-andoni-lehendakaritza-lehendakaritza-2016-06-22
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;span&gt;Lehendakaritza&lt;/span&gt;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceHTMLDoc</name>
			<comment>Recurso con pagina fea</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>id/medio-ambiente/calidad-del-aire/elemento/ICAEstacion-2017-01-26
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>ICAEstacion&lt;/a&gt;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDoc</name>
			<comment>Recurso con pagina fea, ir directamente a pagina /doc sin
				pasar por /id</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>doc/es/medio-ambiente/calidad-del-aire/elemento/CO-2017-01-02
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceRDFXMLContent</name>
			<comment>Obtener recurso en RDF/XML, parsear contenido</comment>
			<method>GET</method>
			<accept>application/rdf+xml</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;ContractEconomicConditions
						xmlns="http://contsem.unizar.es/def/sector-publico/pproc#"
						rdf:datatype="http://www.w3.org/2001/XMLSchema#long"&gt;3670496&lt;/ContractEconomicConditions&gt;
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDataRDFXMLContent</name>
			<comment>Obtener recurso en RDF/XML directamente de /data, parsear
				contenido</comment>
			<method>GET</method>
			<accept>application/rdf+xml</accept>
			<pathuri>data/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;ContractEconomicConditions
						xmlns="http://contsem.unizar.es/def/sector-publico/pproc#"
						rdf:datatype="http://www.w3.org/2001/XMLSchema#long"&gt;3670496&lt;/ContractEconomicConditions&gt;
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDataTTLContent</name>
			<comment>Obtener recurso en TTL directamente de /data, parsear
				contenido</comment>
			<method>GET</method>
			<accept>text/turtle</accept>
			<pathuri>data/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;http://contsem.unizar.es/def/sector-publico/pproc#formalizedDate&gt;
						"2000-03-31"^^xsd:date ;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDataJSONLDContent</name>
			<comment>Obtener recurso en JSONLD directamente de /data, parsear
				contenido</comment>
			<method>GET</method>
			<accept>application/ld+json</accept>
			<pathuri>data/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>"@value" : "10.0"</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDataRDFXMLContentHTMLHeader</name>
			<comment>Obtener recurso en RDF/XML (por extension, no cabecera,
				cabecera HTML) directamente de /data, parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>data/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09.rdf
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;occupation xmlns="http://dbpedia.org/ontology/"
						xml:lang="es"&gt;jefe grupo inspector pesca&lt;/occupation&gt;
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDataTTLContentHTMLHeader</name>
			<comment>Obtener recurso en TTL (por extension, no cabecera, cabecera
				HTML) directamente de /data, parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>data/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09.ttl
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;http://contsem.unizar.es/def/sector-publico/pproc#formalizedDate&gt;
						"2000-03-31"^^xsd:date ;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceDirectlyDataJSONLDContentHTMLHeader</name>
			<comment>Obtener recurso en JSON-LD (por extension, no cabecera,
				cabecera HTML) directamente de /data, parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>data/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09.jsonld
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>"@value" : "2000-03-31"</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceJSONLDContent</name>
			<comment>Obtener recurso en JSON-LD, parsear contenido</comment>
			<method>GET</method>
			<accept>application/ld+json</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>"@value" : "jefe grupo inspector pesca"</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceN3Content</name>
			<comment>Obtener recurso en N3, parsear contenido</comment>
			<method>GET</method>
			<accept>text/rdf+n3</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;http://contsem.unizar.es/def/sector-publico/pproc#managingDepartment&gt;
						&lt;http://es.euskadi.eus/id/sector-publico/departamento/desarrollo-economico-e-infraestructuras&gt;
						;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceNTriplesContent</name>
			<comment>Obtener recurso en NTriples, parsear contenido</comment>
			<method>GET</method>
			<accept>text/plain</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;http://es.euskadi.eus/id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09&gt;
						&lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#type&gt;
						&lt;http://purl.org/cerif/frapo/EmploymentContract&gt; .</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceRDFJSON200</name>
			<comment>Obtener recurso en RDF/JSON, parsear contenido</comment>
			<method>GET</method>
			<accept>application/rdf+json</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getLocation()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>"value" :
						"http://es.euskadi.eus/id/sector-publico/departamento/desarrollo-economico-e-infraestructuras"
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceTriXContent</name>
			<comment>Obtener recurso en TriX, parsear contenido</comment>
			<method>GET</method>
			<accept>application/trix</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;uri&gt;http://dbpedia.org/ontology/occupation&lt;/uri&gt;
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETResourceTurtleContent</name>
			<comment>Obtener recurso en TTL, parsear contenido</comment>
			<method>GET</method>
			<accept>text/turtle</accept>
			<pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09
			</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;http://dbpedia.org/ontology/occupation&gt; "jefe grupo
						inspector pesca"@es ;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETClassHTML200</name>
			<comment>Obtener clase en HTML, sin parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/euskadipedia/Hotel</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETClassHTMLAnchorContent</name>
			<comment>Obtener clase en HTML con ancla, parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/euskadipedia.html#Hotel</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETPropertyRDFXMLContent</name>
			<comment>Obtener propiedad en RDF/XML, parsear contenido</comment>
			<method>GET</method>
			<accept>application/rdf+xml</accept>
			<pathuri>def/euskadipedia/precio</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;/owl:Class&gt;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETPropertyHTML200</name>
			<comment>Obtener propiedad en HTML, sin parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/euskadipedia/precio</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyHTML200</name>
			<comment>-</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/turismo/alojamiento</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyHTMLContent</name>
			<comment>Obtener ontologia en HTML, parsear contenido</comment>
			<method>GET</method>
			<accept>HTML</accept>
			<pathuri>def/turismo/alojamiento</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>http://euskadi.eus/def/euskadipedia/0.0.1</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyHTMLContentFileExtensionHTML</name>
			<comment>Obtener ontologia en HTML con .html, parsear contenido
			</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/turismo/alojamiento</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;a
						name="http://euskadi.eus/def/euskadipedia#Hotel"&gt;&lt;/a&gt;
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyRDFXML200</name>
			<comment>.</comment>
			<method>GET</method>
			<accept>application/rdf+xml</accept>
			<pathuri>def/turismo/alojamient</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertEquals</type>
					<testObject>requestBean.getStatus()</testObject>
					<value>200</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyRDFXMLContentHTMLHeader</name>
			<comment>Obtener ontologia en OWL (por extension, no cabecera,
				cabecera HTML), parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/euskadipedia.owl</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;owl:ObjectProperty
						rdf:about="http://euskadi.eus/def/euskadipedia#inHistoricTerritory"&gt;
					</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyRDFXMLContentFileExtensionOWL</name>
			<comment>Obtener ontologia en RDF/XML con .owl, parsear contenido
			</comment>
			<method>GET</method>
			<accept>application/rdf+xml</accept>
			<pathuri>def/turismo/alojamiento</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;owl:Ontology
						rdf:about="http://euskadi.eus/def/euskadipedia"&gt;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>GETOntologyRDFXMLContent</name>
			<comment>Obtener ontologia en RDF/XML, parsear contenido</comment>
			<method>GET</method>
			<accept>text/html</accept>
			<pathuri>def/turismo/alojamiento</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters/>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>&lt;owl:Ontology
						rdf:about="http://euskadi.eus/def/euskadipedia"&gt;</value>
				</test>
			</tests>
		</junit>
		<junit>
			<name>SPARQLPOSTNamedGraphsMetadataCSVContent</name>
			<comment>Consulta sobre datos y metadatos, parsear contenido
			</comment>
			<method>POST</method>
			<accept>text/csv</accept>
			<pathuri>sparql</pathuri>
			<baseuri>lod.baseUri</baseuri>
			<parameters>
				<parameter>
					<id>query</id>
					<value>SELECT DISTINCT ?a ?b WHERE { ?a ?b ?g GRAPH ?g {?sub ?pred
						?obj}}</value>
				</parameter>
			</parameters>
			<tests>
				<test>
					<type>assertTrue</type>
					<testObject>requestBean.getResponseString()</testObject>
					<comparisonmode>contains</comparisonmode>
					<value>http://es.euskadi.eus/distribution/calidad-aire-en-euskadi-2017
					</value>
				</test>
			</tests>
		</junit>
	<junit>
         <name>SPARQLPOSTMassiveCSV200</name>
         <comment>Consulta masiva, sin parsear contenido</comment>
         <method>POST</method>
         <accept>text/csv</accept>
         <pathuri>sparql</pathuri>
         <baseuri>lod.baseUri</baseuri>
         <parameters>
            <parameter>
               <id>query</id>
               <value>SELECT ?g ?p ?o WHERE { ?g ?p ?o } LIMIT 145000</value>
            </parameter>
         </parameters>
         <tests>
            <test>
               <type>assertEquals</type>
               <testObject>requestBean.getStatus()</testObject>
               <value>200</value>
            </test>
         </tests>
      </junit>
   <junit>
         <name>SPARQLPOSTInsert400</name>
         <comment>Insertar datos, deberia fallar</comment>
         <method>POST</method>
         <accept>text/csv</accept>
         <pathuri>sparql</pathuri>
         <baseuri>lod.baseUri</baseuri>
         <parameters>
            <parameter>
               <id>query</id>
               <value>INSERT DATA { GRAPH &lt;http://lod.eurohelp.es&gt; { &lt;http:lod.eurohelp.es/mikel&gt;  &lt;http://lod.eurohelp.es/position&gt; &lt;http://lod.eurohelp.es/analist&gt; } }</value>
            </parameter>
         </parameters>
         <tests>
            <test>
               <type>assertEquals</type>
               <testObject>requestBean.getStatus()</testObject>
               <value>400</value>
            </test>
         </tests>
      </junit>
   <junit>
         <name>GETClassRDFXMLContent</name>
         <comment>Obtener clase en RDF/XML, parsear contenido</comment>
         <method>GET</method>
         <accept>application/rdf+xml</accept>
         <pathuri>def/euskadipedia/Hotel</pathuri>
         <baseuri>lod.baseUri</baseuri>
         <parameters/>
         <tests>
            <test>
               <type>assertTrue</type>
               <testObject>requestBean.getResponseString()</testObject>
               <comparisonmode>contains</comparisonmode>
               <value>&lt;owl:ObjectProperty rdf:about="http://euskadi.eus/def/euskadipedia#inHistoricTerritory"&gt;</value>
            </test>
         </tests>
      </junit>
   <junit>
         <name>GETResourceRDFXML200</name>
         <comment>-</comment>
         <method>GET</method>
         <accept>application/rdf+xml</accept>
         <pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09"; //			String name = "GETResourceRDFXML200</pathuri>
         <baseuri>lod.baseUri</baseuri>
         <parameters/>
         <tests>
            <test>
               <type>assertEquals</type>
               <testObject>requestBean.getStatus()</testObject>
               <value>200</value>
            </test>
         </tests>
      </junit>
   <junit>
         <name>GETResourceTriGContent</name>
         <comment>Obtener recurso en TriG, parsear contenido</comment>
         <method>GET</method>
         <accept>application/trig</accept>
         <pathuri>id/sector-publico/puestos-trabajo/contrato/1-gobierno-vasco-donostia-easo-10-3024.0-2016-05-09</pathuri>
         <baseuri>lod.baseUri</baseuri>
         <parameters/>
         <tests>
            <test>
               <type>assertTrue</type>
               <testObject>requestBean.getResponseString()</testObject>
               <comparisonmode>contains</comparisonmode>
               <value>GETResourceTriGContent Response no genera Trig</value>
            </test>
         </tests>
      </junit>
   </testCases>
</xml>

